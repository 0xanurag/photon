initSidebarItems({"fn":[["base64_to_image","Convert a base64 string to a PhotonImage."],["base64_to_vec","Convert a base64 string to a Vec of u8s."],["get_image_data","Get the ImageData from a 2D canvas context"],["open_image","Convert a HTML5 Canvas Element to a PhotonImage."],["putImageData","Place a PhotonImage onto a 2D canvas."],["run","Create a PhotonImage from a byte slice. [temp] Check if WASM is supported."],["to_image_data","Convert a PhotonImage to JS-compatible ImageData."],["to_raw_pixels","Convert ImageData to a raw pixel vec of u8s."]],"mod":[["channels","Channel manipulation."],["colour_spaces","Image manipulation effects in HSL, LCh and HSV."],["conv","Convolution effects such as sharpening, blurs, sobel filters, etc.,"],["effects","Special effects."],["filters","Preset color filters."],["helpers","Helper functions for converting between various formats"],["monochrome","Monochrome-related effects and greyscaling/duotoning."],["multiple","Image manipulation with multiple images, including adding watermarks, changing backgrounds, etc.,"],["native","Native-only functions.  Includes functions that open images from the file-system, etc.,"],["noise","Add noise to images."],["text","Draw text onto an image. For extended graphic design/text-drawing functionality, see GDL,  which is a graphic design library, compatible with Photon."],["transform","Image transformations, ie: scale, crop, resize, etc.,"]],"struct":[["PhotonImage","Provides the image's height, width, and contains the image's raw pixels. For use when communicating between JS and WASM, and also natively. "],["Rgb","RGB color type."]]});